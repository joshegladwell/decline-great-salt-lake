---
title: "Poster"
format:
  html:
    code-fold: true
---

Load libraries
```{r echo=FALSE, message=FALSE}
library(ggplot2)
library(tidyverse)
library(extrafont)
```

Read in data
```{r}
water_levels <- read.csv(
  "../data/raw/USGS_Water_Levels/usgs_water_levels.tsv",
  sep = '\t', # Tab-separated
  skip = 29 # Skip first 29 rows
) %>%
  # Drop first row after header
  filter(!row_number() %in% c(1)) %>%
  # Drop agency_cd and site_no columns
  select(-c(agency_cd, site_no)) %>%
  # Rename columns
  rename(
    water_level_ft = X178324_62614_00003,
    data_qual = X178324_62614_00003_cd
  ) %>%
  # Change columns to proper type
  mutate(
    datetime = as.Date(datetime),
    water_level_ft = as.numeric(water_level_ft),
    data_qual = as.factor(data_qual)
  )
```

Line plot:
```{r}
line_plot_df <- water_levels %>%
  # Drop data_qual
  select(-c(data_qual)) %>%
  # Drop na
  drop_na()

water_level_plot <- ggplot(
  data = line_plot_df, 
  aes(x = datetime, y = water_level_ft)
) +
  geom_line(color = "#10241B") +
  # geom_point(
  #   data = line_plot_df, 
  #   aes(x = as.Date("1989-10-01"), 
  #       y = water_level_ft[datetime == as.Date("1989-10-01")]),
  #   color = "#10241B",
  #   fill = "#CCBB88",
  #   size = 2,
  #   pch = 21
  # ) +
  # geom_label(
  #   aes(
  #     x = as.Date("1989-10-01"), 
  #     y = water_level_ft[datetime == as.Date("1989-10-01")],
  #     label = "10/01/1989: Measurement frequency switches\nfrom bi-monthly to daily",
  #   ),
  #   nudge_x = 5300,
  #   nudge_y = 1.75,
  #   size = 3,
  #   color = "#10241B",
  #   fill = "#CCBB88"
  # ) +
  labs(
    title = "Great Salt Lake Water Levels by Time",
    x = "Date",
    y = "Water Elevation (ft)"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold", size = 18, family = "Optima"),
    axis.title.x = element_text(size = 16, family = "Optima"),
    axis.title.y = element_text(size = 16, family = "Optima"),
    axis.text.x = element_text(size = 14, family = "Optima"),
    axis.text.y = element_text(size = 14, family = "Optima")
  ) +
  scale_x_continuous(
    breaks = as.Date(paste0(seq(1970, 2020, 10), "-01-01")),
    labels = seq(1970, 2020, 10)
  )

ggsave(
  "../img/poster/plots/line.svg", 
  device = 'svg',
  width = 5.5,
  height = 3,
  units = "in"
)

water_level_plot
```


Add information about toxic exposure:
```{r}
# Read in toxic dust data
toxins <- read.csv("../data/modified/toxins/dust_data.csv") %>%
  # Convert date columns to date type
  mutate(
    Start_Date = as.Date(Start_Date, format = "%m/%d/%Y"),
    End_Date = as.Date(End_Date, format = "%m/%d/%Y")
  )

boxplot(toxins$As)
```

According to the [CDC Toxicological Profile for Arsenic](https://www.atsdr.cdc.gov/toxprofiles/tp2-c6.pdf) "Natural levels of arsenic in soil usually range from 1 to 40 mg/kg, with a mean of 5 mg/kg." The median in sampled spots around the Great Salt Lake is `r median(toxins$As, na.rm = TRUE)`



```{r}
# Get elevation of the playa
lake_bed_elev <- toxins[
  toxins$Site_Name == "Saline beach (Hynek)",
]$elev_feet[1]

# Save healthy elevation for brine shrimp
brine_shrimp_elev <- 4191

toxic_col <- "#763A4F"
shrimp_col <- "#556A82"

# Save x-coord locations for labels
label1_loc <- as.Date("1982-05-01")
label2_loc <- as.Date("1989-10-01")

water_level_plot +
  # Add information about lakebed
  geom_hline(
    yintercept = lake_bed_elev, 
    color = toxic_col,
    linewidth = 1.5,
    alpha = 0.7
  ) +
  geom_text(
    aes(
      x = label1_loc,
      y = lake_bed_elev,
      label = "Toxic Lake Bed"
    ),
    color = toxic_col,
    family = "Optima",
    nudge_y = -1.2
  ) +
  # Add information about healthy brine shrimp level
  geom_hline(
    yintercept = brine_shrimp_elev,
    color = shrimp_col,
    linewidth = 1.5,
    alpha = 0.7
  ) +
  geom_text(
    aes(
      x = label2_loc,
      y = brine_shrimp_elev,
      label = "Healthy Brine Shrimp Elevation"
    ),
    color = shrimp_col,
    family = "Optima",
    nudge_y = -1.2
  )

ggsave(
  "../img/poster/plots/line.svg", 
  device = 'svg',
  width = 5.5,
  height = 3,
  units = "in"
)
```


I settled on these values (toxic lake bed and healthy brine shrimp level) from the datasets and research. The elevation of the lake bed is certainly different in different parts of the lake, but I concluded that the lowest elevation in the dust and sediment dataset suggests an area as close to the lake as possible that is now dried up. I therefore settled on representing the lake bed with the elevation of the sampling site at Saline Beach (Hynek).

The healthy level for brine shrimp is based on [this article](https://ambrook.com/research/sustainability/great-salt-lake-utah-artemis-brine-shrimp-aquaculture-drought#).


## New poster
After some deliberation, I have settled on a new approach for my poster. This will involve a very minimalist style. The following code generates the similar plot to what I am including above:
```{r}
# base_color <- "black"
base_color <- "white"


water_level_minimalist <- ggplot(
  data = line_plot_df, 
  aes(x = datetime, y = water_level_ft)
) +
  geom_line(
    color = base_color,
    linewidth = 3
  ) +
  labs(
    title = "Great Salt Lake Water Levels by Time",
    x = "Date",
    y = "Water Elevation (ft)"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_blank(),
    # plot.title = element_text(
    #   face = "bold", 
    #   size = 48, 
    #   family = "Optima",
    #   color = base_color
    # ),
    # axis.title.x = element_text(
    #   size = 40, 
    #   family = "Optima",
    #   color = base_color
    # ),
    axis.title.x = element_blank(), # Add manually on poster
    # axis.title.y = element_text(
    #   size = 40, 
    #   family = "Optima",
    #   color = base_color
    # ),
    axis.title.y = element_blank(), # Add manually on poster
    # axis.text.x = element_text(
    #   size = 36, 
    #   family = "Optima",
    #   color = base_color
    # ),
    axis.text.x = element_blank(), # Add manually on poster
    axis.text.y = element_text(
      size = 36, 
      family = "Optima",
      color = base_color
    ),
    panel.grid.major = element_blank(), 
    panel.grid.minor = element_blank(),
    panel.background = element_blank()
  ) +
  scale_x_continuous(
    breaks = c(as.Date("1966-04-15"), as.Date("2023-04-15")),
    labels = c("1966", "2023")
  ) +
  scale_y_continuous(
    breaks = c(4189, 4211),
    labels = c("4,189", "4,211")
  ) +
  # Add information about lakebed
  geom_hline(
    yintercept = lake_bed_elev, 
    color = base_color,
    linewidth = 2,
    linetype = "longdash"
  ) +
  # Add information about healthy brine shrimp level
  geom_hline(
    yintercept = brine_shrimp_elev,
    color = base_color,
    linewidth = 2,
    linetype = "dotted"
  ) 

water_level_minimalist

ggsave(
  "../img/poster/plots/line_white.svg", 
  device = 'svg',
  width = 26.8125,
  height = 5.8288,
  units = "in"
)
```







