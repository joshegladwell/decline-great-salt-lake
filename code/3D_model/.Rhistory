library(rayshader)
library(sp)
library(raster)
library(scales)
library(rgdal)
library(magick)
gsl_elevation <- raster::merge(
raster("../../data/raw/SRTM/N40W112.hgt"),
raster("../../data/raw/SRTM/N40W113.hgt"),
raster("../../data/raw/SRTM/N40W114.hgt"),
raster("../../data/raw/SRTM/N41W112.hgt"),
raster("../../data/raw/SRTM/N41W113.hgt"),
raster("../../data/raw/SRTM/N41W114.hgt")
)
height_shade(raster_to_matrix(gsl_elevation)) %>%
plot_map()
# Rasterize and stack "image A"
gsl_a_rbg = stack(
raster("../../data/raw/USGS_Landsat/LC08_L1TP_038031_20220602_20220609_02_T1/LC08_L1TP_038031_20220602_20220609_02_T1_B4.TIF"), # R
raster("../../data/raw/USGS_Landsat/LC08_L1TP_038031_20220602_20220609_02_T1/LC08_L1TP_038031_20220602_20220609_02_T1_B3.TIF"), # B
raster("../../data/raw/USGS_Landsat/LC08_L1TP_038031_20220602_20220609_02_T1/LC08_L1TP_038031_20220602_20220609_02_T1_B2.TIF") # G
)
# Rasterize and stack "image B"
gsl_b_rbg = stack(
raster("../../data/raw/USGS_Landsat/LC08_L1TP_038032_20220602_20220609_02_T1/LC08_L1TP_038032_20220602_20220609_02_T1_B4.TIF"), # R
raster("../../data/raw/USGS_Landsat/LC08_L1TP_038032_20220602_20220609_02_T1/LC08_L1TP_038032_20220602_20220609_02_T1_B3.TIF"), # B
raster("../../data/raw/USGS_Landsat/LC08_L1TP_038032_20220602_20220609_02_T1/LC08_L1TP_038032_20220602_20220609_02_T1_B2.TIF") # G
)
# Rasterize and stack "image C"
gsl_c_rbg = stack(
raster("../../data/raw/USGS_Landsat/LC09_L1TP_039031_20220601_20230407_02_T1/LC09_L1TP_039031_20220601_20230407_02_T1_B4.TIF"), # R
raster("../../data/raw/USGS_Landsat/LC09_L1TP_039031_20220601_20230407_02_T1/LC09_L1TP_039031_20220601_20230407_02_T1_B3.TIF"), # B
raster("../../data/raw/USGS_Landsat/LC09_L1TP_039031_20220601_20230407_02_T1/LC09_L1TP_039031_20220601_20230407_02_T1_B4.TIF") # G
)
# Rasterize and stack "image D"
gsl_d_rbg = stack(
raster("../../data/raw/USGS_Landsat/LC09_L1TP_039032_20220601_20230407_02_T1/LC09_L1TP_039032_20220601_20230407_02_T1_B4.TIF"), # R
raster("../../data/raw/USGS_Landsat/LC09_L1TP_039032_20220601_20230407_02_T1/LC09_L1TP_039032_20220601_20230407_02_T1_B3.TIF"), # B
raster("../../data/raw/USGS_Landsat/LC09_L1TP_039032_20220601_20230407_02_T1/LC09_L1TP_039032_20220601_20230407_02_T1_B2.TIF") # G
)
# Merge images into one stack
gsl_rbg = merge(gsl_a_rbg, gsl_b_rbg, gsl_c_rbg, gsl_d_rbg)
# Plot merged rasterstack
plotRGB(gsl_rbg, scale=255^2)
gsl_rbg_corrected = sqrt(gsl_rbg)
plotRGB(gsl_rbg_corrected)
gsl_elevation_utm = raster::projectRaster(gsl_elevation, crs = crs(gsl_rbg), method = "bilinear")
gsl_elevation_utm = raster::projectRaster(gsl_elevation, crs = crs(gsl_rbg), method = "bilinear")
gsl_elevation_utm = raster::projectRaster(gsl_elevation, crs = crs(gsl_rbg), method = "bilinear")
gsl_elevation_utm = raster::projectRaster(gsl_elevation, crs = crs(gsl_rbg), method = "bilinear")
gsl_elevation_utm = raster::projectRaster(gsl_elevation, crs = crs(gsl_rbg), method = "bilinear")
crs(gsl_elevation_utm)
bottom_left = c(y=-113.307704, x=40.527373)
top_right = c(y=-111.472865, x=41.830442)
extent_latlong = sp::SpatialPoints(rbind(bottom_left, top_right), proj4string=sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84"))
extent_utm = sp::spTransform(extent_latlong, raster::crs(gsl_elevation_utm))
e = raster::extent(extent_utm)
e
gsl_rgb_cropped = raster::crop(gsl_rbg_corrected, e)
elevation_cropped = raster::crop(gsl_elevation_utm, e)
names(gsl_rgb_cropped) = c("r","g","b")
gsl_r_cropped = rayshader::raster_to_matrix(gsl_rgb_cropped$r)
gsl_g_cropped = rayshader::raster_to_matrix(gsl_rgb_cropped$g)
gsl_b_cropped = rayshader::raster_to_matrix(gsl_rgb_cropped$b)
gsl_el_matrix = rayshader::raster_to_matrix(elevation_cropped)
gsl_rgb_array = array(0,dim=c(nrow(gsl_r_cropped),ncol(gsl_r_cropped),3))
gsl_rgb_array[,,1] = gsl_r_cropped/255 # Red layer
gsl_rgb_array[,,2] = gsl_g_cropped/255 # Green layer
gsl_rgb_array[,,3] = gsl_b_cropped/255 # Blue layer
gsl_rgb_array = aperm(gsl_rgb_array, c(2,1,3))
plot_map(gsl_rgb_array)
gsl_rgb_contrast = scales::rescale(gsl_rgb_array,to=c(0,1))
plot_map(gsl_rgb_contrast)
plot_3d(
gsl_rgb_contrast, gsl_el_matrix,
windowsize = c(1920,1080),
zscale = 15,
shadowdepth = -50,
zoom=0.5,
phi=35,
theta=0,
fov=70,
background = "#F2E1D0",
shadowcolor = "#523E2B"
)
render_snapshot(
title_color = "white",
title_bar_alpha = 1
)
plot_3d(
gsl_rgb_contrast, gsl_el_matrix,
windowsize = c(1920,1080),
zscale = 15,
shadowdepth = -50,
zoom=0.5,
phi=35,
theta=0,
fov=70,
background = "#F2E1D0",
shadowcolor = "#523E2B"
)
render_snapshot(
title_color = "white",
title_bar_alpha = 1
)
plot_3d(
gsl_rgb_contrast, gsl_el_matrix,
windowsize = c(1920,1080),
zscale = 15,
shadowdepth = -50,
zoom=0.4,
phi=35,
theta=0,
fov=70,
background = "skyblue",
shadowcolor = "#523E2B"
)
render_snapshot(
title_color = "white",
title_bar_alpha = 1
)
plot_3d(
gsl_rgb_contrast, gsl_el_matrix,
windowsize = c(1920,1080),
zscale = 15,
shadowdepth = -50,
zoom=0.4,
phi=35,
theta=0,
fov=70,
background = "#F2E1D0",
shadowcolor = "#523E2B"
)
render_snapshot(
title_color = "white",
title_bar_alpha = 1
)
angles= seq(0,360,length.out = 1441)[-1]
for(i in 1:1440) {
render_camera(theta=0+angles[i])
render_snapshot(filename = sprintf("imgs/gsl%i.png", i))
}
2+2
library(rayshader)
library(sp)
library(raster)
library(scales)
library(rgdal)
library(magick)
gsl_elevation <- raster::merge(
raster("../../data/raw/SRTM/N40W112.hgt"),
raster("../../data/raw/SRTM/N40W113.hgt"),
raster("../../data/raw/SRTM/N40W114.hgt"),
raster("../../data/raw/SRTM/N41W112.hgt"),
raster("../../data/raw/SRTM/N41W113.hgt"),
raster("../../data/raw/SRTM/N41W114.hgt")
)
height_shade(raster_to_matrix(gsl_elevation)) %>%
plot_map()
# Rasterize and stack "image A"
gsl_a_rbg = stack(
raster("../../data/raw/USGS_Landsat/LC08_L1TP_038031_20220602_20220609_02_T1/LC08_L1TP_038031_20220602_20220609_02_T1_B4.TIF"), # R
raster("../../data/raw/USGS_Landsat/LC08_L1TP_038031_20220602_20220609_02_T1/LC08_L1TP_038031_20220602_20220609_02_T1_B3.TIF"), # B
raster("../../data/raw/USGS_Landsat/LC08_L1TP_038031_20220602_20220609_02_T1/LC08_L1TP_038031_20220602_20220609_02_T1_B2.TIF") # G
)
# Rasterize and stack "image B"
gsl_b_rbg = stack(
raster("../../data/raw/USGS_Landsat/LC08_L1TP_038032_20220602_20220609_02_T1/LC08_L1TP_038032_20220602_20220609_02_T1_B4.TIF"), # R
raster("../../data/raw/USGS_Landsat/LC08_L1TP_038032_20220602_20220609_02_T1/LC08_L1TP_038032_20220602_20220609_02_T1_B3.TIF"), # B
raster("../../data/raw/USGS_Landsat/LC08_L1TP_038032_20220602_20220609_02_T1/LC08_L1TP_038032_20220602_20220609_02_T1_B2.TIF") # G
)
# Rasterize and stack "image C"
gsl_c_rbg = stack(
raster("../../data/raw/USGS_Landsat/LC09_L1TP_039031_20220601_20230407_02_T1/LC09_L1TP_039031_20220601_20230407_02_T1_B4.TIF"), # R
raster("../../data/raw/USGS_Landsat/LC09_L1TP_039031_20220601_20230407_02_T1/LC09_L1TP_039031_20220601_20230407_02_T1_B3.TIF"), # B
raster("../../data/raw/USGS_Landsat/LC09_L1TP_039031_20220601_20230407_02_T1/LC09_L1TP_039031_20220601_20230407_02_T1_B4.TIF") # G
)
# Rasterize and stack "image D"
gsl_d_rbg = stack(
raster("../../data/raw/USGS_Landsat/LC09_L1TP_039032_20220601_20230407_02_T1/LC09_L1TP_039032_20220601_20230407_02_T1_B4.TIF"), # R
raster("../../data/raw/USGS_Landsat/LC09_L1TP_039032_20220601_20230407_02_T1/LC09_L1TP_039032_20220601_20230407_02_T1_B3.TIF"), # B
raster("../../data/raw/USGS_Landsat/LC09_L1TP_039032_20220601_20230407_02_T1/LC09_L1TP_039032_20220601_20230407_02_T1_B2.TIF") # G
)
# Merge images into one stack
gsl_rbg = merge(gsl_a_rbg, gsl_b_rbg, gsl_c_rbg, gsl_d_rbg)
# Plot merged rasterstack
plotRGB(gsl_rbg, scale=255^2)
gsl_rbg_corrected = sqrt(gsl_rbg)
plotRGB(gsl_rbg_corrected)
gsl_elevation_utm = raster::projectRaster(gsl_elevation, crs = crs(gsl_rbg), method = "bilinear")
gsl_elevation_utm = raster::projectRaster(gsl_elevation, crs = crs(gsl_rbg), method = "bilinear")
crs(gsl_elevation_utm)
bottom_left = c(y=-113.307704, x=40.527373)
top_right = c(y=-111.472865, x=41.830442)
extent_latlong = sp::SpatialPoints(rbind(bottom_left, top_right), proj4string=sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84"))
extent_utm = sp::spTransform(extent_latlong, raster::crs(gsl_elevation_utm))
e = raster::extent(extent_utm)
e
gsl_rgb_cropped = raster::crop(gsl_rbg_corrected, e)
elevation_cropped = raster::crop(gsl_elevation_utm, e)
names(gsl_rgb_cropped) = c("r","g","b")
gsl_r_cropped = rayshader::raster_to_matrix(gsl_rgb_cropped$r)
gsl_g_cropped = rayshader::raster_to_matrix(gsl_rgb_cropped$g)
gsl_b_cropped = rayshader::raster_to_matrix(gsl_rgb_cropped$b)
gsl_el_matrix = rayshader::raster_to_matrix(elevation_cropped)
gsl_rgb_array = array(0,dim=c(nrow(gsl_r_cropped),ncol(gsl_r_cropped),3))
gsl_rgb_array[,,1] = gsl_r_cropped/255 # Red layer
gsl_rgb_array[,,2] = gsl_g_cropped/255 # Green layer
gsl_rgb_array[,,3] = gsl_b_cropped/255 # Blue layer
gsl_rgb_array = aperm(gsl_rgb_array, c(2,1,3))
plot_map(gsl_rgb_array)
gsl_rgb_contrast = scales::rescale(gsl_rgb_array,to=c(0,1))
plot_map(gsl_rgb_contrast)
plot_3d(
gsl_rgb_contrast, gsl_el_matrix,
windowsize = c(1920,1080),
zscale = 15,
shadowdepth = -50,
zoom=0.4,
phi=35,
theta=0,
fov=70,
background = "#F2E1D0",
shadowcolor = "#523E2B"
)
render_snapshot(
title_color = "white",
title_bar_alpha = 1
)
angles= seq(0,360,length.out = 1441)[-1]
for(i in 1:1440) {
render_camera(theta=0+angles[i])
render_snapshot(filename = sprintf("imgs/gsl%i.png", i))
}
rgl::rgl.close()
system("ffmpeg -framerate 60 -i ./vid/gsl%d.png -pix_fmt yuv420p gsl.mp4")
system("ffmpeg -framerate 60 -i ./imgs/gsl%d.png -pix_fmt yuv420p gsl.mp4")
y
system("ffmpeg -framerate 60 -i ./imgs/gsl%d.png -pix_fmt yuv420p vid/gsl.mp4")
library(rayshader)
library(sp)
library(raster)
library(scales)
library(rgdal)
library(magick)
gsl_elevation <- raster::merge(
raster("../../data/raw/SRTM/N40W112.hgt"),
raster("../../data/raw/SRTM/N40W113.hgt"),
raster("../../data/raw/SRTM/N40W114.hgt"),
raster("../../data/raw/SRTM/N41W112.hgt"),
raster("../../data/raw/SRTM/N41W113.hgt"),
raster("../../data/raw/SRTM/N41W114.hgt")
)
height_shade(raster_to_matrix(gsl_elevation)) %>%
plot_map()
# Rasterize and stack "image A"
gsl_a_rbg = stack(
raster("../../data/raw/USGS_Landsat/LC08_L1TP_038031_20220602_20220609_02_T1/LC08_L1TP_038031_20220602_20220609_02_T1_B4.TIF"), # R
raster("../../data/raw/USGS_Landsat/LC08_L1TP_038031_20220602_20220609_02_T1/LC08_L1TP_038031_20220602_20220609_02_T1_B3.TIF"), # B
raster("../../data/raw/USGS_Landsat/LC08_L1TP_038031_20220602_20220609_02_T1/LC08_L1TP_038031_20220602_20220609_02_T1_B2.TIF") # G
)
# Rasterize and stack "image B"
gsl_b_rbg = stack(
raster("../../data/raw/USGS_Landsat/LC08_L1TP_038032_20220602_20220609_02_T1/LC08_L1TP_038032_20220602_20220609_02_T1_B4.TIF"), # R
raster("../../data/raw/USGS_Landsat/LC08_L1TP_038032_20220602_20220609_02_T1/LC08_L1TP_038032_20220602_20220609_02_T1_B3.TIF"), # B
raster("../../data/raw/USGS_Landsat/LC08_L1TP_038032_20220602_20220609_02_T1/LC08_L1TP_038032_20220602_20220609_02_T1_B2.TIF") # G
)
# Rasterize and stack "image C"
gsl_c_rbg = stack(
raster("../../data/raw/USGS_Landsat/LC09_L1TP_039031_20220601_20230407_02_T1/LC09_L1TP_039031_20220601_20230407_02_T1_B4.TIF"), # R
raster("../../data/raw/USGS_Landsat/LC09_L1TP_039031_20220601_20230407_02_T1/LC09_L1TP_039031_20220601_20230407_02_T1_B3.TIF"), # B
raster("../../data/raw/USGS_Landsat/LC09_L1TP_039031_20220601_20230407_02_T1/LC09_L1TP_039031_20220601_20230407_02_T1_B4.TIF") # G
)
# Rasterize and stack "image D"
gsl_d_rbg = stack(
raster("../../data/raw/USGS_Landsat/LC09_L1TP_039032_20220601_20230407_02_T1/LC09_L1TP_039032_20220601_20230407_02_T1_B4.TIF"), # R
raster("../../data/raw/USGS_Landsat/LC09_L1TP_039032_20220601_20230407_02_T1/LC09_L1TP_039032_20220601_20230407_02_T1_B3.TIF"), # B
raster("../../data/raw/USGS_Landsat/LC09_L1TP_039032_20220601_20230407_02_T1/LC09_L1TP_039032_20220601_20230407_02_T1_B2.TIF") # G
)
# Merge images into one stack
gsl_rbg = merge(gsl_a_rbg, gsl_b_rbg, gsl_c_rbg, gsl_d_rbg)
# Plot merged rasterstack
plotRGB(gsl_rbg, scale=255^2)
gsl_rbg_corrected = sqrt(gsl_rbg)
plotRGB(gsl_rbg_corrected)
gsl_elevation_utm = raster::projectRaster(gsl_elevation, crs = crs(gsl_rbg), method = "bilinear")
gsl_elevation_utm = raster::projectRaster(gsl_elevation, crs = crs(gsl_rbg), method = "bilinear")
gsl_elevation_utm = raster::projectRaster(gsl_elevation, crs = crs(gsl_rbg), method = "bilinear")
crs(gsl_elevation_utm)
bottom_left = c(y=-113.307704, x=40.527373)
top_right = c(y=-111.472865, x=41.830442)
extent_latlong = sp::SpatialPoints(rbind(bottom_left, top_right), proj4string=sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84"))
extent_utm = sp::spTransform(extent_latlong, raster::crs(gsl_elevation_utm))
e = raster::extent(extent_utm)
e
gsl_rgb_cropped = raster::crop(gsl_rbg_corrected, e)
elevation_cropped = raster::crop(gsl_elevation_utm, e)
names(gsl_rgb_cropped) = c("r","g","b")
gsl_r_cropped = rayshader::raster_to_matrix(gsl_rgb_cropped$r)
gsl_g_cropped = rayshader::raster_to_matrix(gsl_rgb_cropped$g)
gsl_b_cropped = rayshader::raster_to_matrix(gsl_rgb_cropped$b)
gsl_el_matrix = rayshader::raster_to_matrix(elevation_cropped)
gsl_rgb_array = array(0,dim=c(nrow(gsl_r_cropped),ncol(gsl_r_cropped),3))
gsl_rgb_array[,,1] = gsl_r_cropped/255 # Red layer
gsl_rgb_array[,,2] = gsl_g_cropped/255 # Green layer
gsl_rgb_array[,,3] = gsl_b_cropped/255 # Blue layer
gsl_rgb_array = aperm(gsl_rgb_array, c(2,1,3))
plot_map(gsl_rgb_array)
gsl_rgb_contrast = scales::rescale(gsl_rgb_array,to=c(0,1))
plot_map(gsl_rgb_contrast)
plot_3d(
gsl_rgb_contrast, gsl_el_matrix,
windowsize = c(1920,1080),
zscale = 15,
shadowdepth = -50,
zoom=0.65,
phi=30,
theta=0,
fov=70,
background = "white",
shadowcolor = "#523E2B"
)
render_snapshot(
title_color = "white",
title_bar_alpha = 1
)
angles= seq(0,360,length.out = 1441)[-1]
for(i in 1:1440) {
render_camera(theta=0+angles[i])
render_snapshot(filename = sprintf("imgs/gsl%i.png", i))
}
rgl::rgl.close()
system("ffmpeg -framerate 60 -i ./imgs/gsl%d.png -pix_fmt yuv420p vid/gsl.mp4")
